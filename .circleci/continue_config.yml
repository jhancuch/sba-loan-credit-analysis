# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  run-build-app:
    type: boolean
    default: false
  run-build-scripts:
    type: boolean
    default: true

workflows:
  # when pipeline parameter, run-build-service-1-job is true, the
  # build-service-1 job is triggered.
  service-1:
    when: << pipeline.parameters.run-build-app >>
    jobs:
        build-test-push:
        docker:
          - image: cimg/python:3.7
        
        parallelism: 4
        resource_class: large
        # UPDATE STARTING HERE
        working_directory: ~/sba-loan-credit-analysis

        steps:
          - checkout
          # Download and cache dependencies
          - restore_cache:
              keys:
              - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
          - run:
              name: install dependencies
              no_output_timeout: 30m
              command: |
                python3 -m venv venv
                . venv/bin/activate
                pip3 install -r requirements.txt
          - save_cache:
              paths:
                - ./venv
              key: v1-dependencies-{{ checksum "requirements.txt" }}

          # run test
          - run:
              name: run tests
              no_output_timeout: 30m
              command: |
                . venv/bin/activate
                make test

  service-2:
    when: << pipeline.parameters.run-build-scripts >>
    jobs:
        build-test-push:
        docker:
          - image: cimg/python:3.7
        
        parallelism: 4
        resource_class: large
        
        working_directory: ~/sba-loan-credit-analysis

        steps:
          - checkout
          # Download and cache dependencies
          - restore_cache:
              keys:
              - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
          - run:
              name: install dependencies
              no_output_timeout: 30m
              command: |
                python3 -m venv venv
                . venv/bin/activate
                pip3 install -r requirements.txt
          - save_cache:
              paths:
                - ./venv
              key: v1-dependencies-{{ checksum "requirements.txt" }}

          # run test
          - run:
              name: run tests
              no_output_timeout: 30m
              command: |
                . venv/bin/activate
                make test